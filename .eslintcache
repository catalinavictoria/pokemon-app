[{"/Users/catavictoria/Documents/GitHub/pokemon-app/src/index.js":"1","/Users/catavictoria/Documents/GitHub/pokemon-app/src/App.js":"2","/Users/catavictoria/Documents/GitHub/pokemon-app/src/reportWebVitals.js":"3","/Users/catavictoria/Documents/GitHub/pokemon-app/src/pokeImage.js":"4"},{"size":514,"mtime":1607072012686,"results":"5","hashOfConfig":"6"},{"size":843,"mtime":1608091881992,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1607066295565,"results":"8","hashOfConfig":"6"},{"size":7828,"mtime":1608166469232,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"d27scp",{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"/Users/catavictoria/Documents/GitHub/pokemon-app/src/index.js",[],["21","22"],"/Users/catavictoria/Documents/GitHub/pokemon-app/src/App.js",["23"],"import './App.css';\nimport React from 'react';\nimport PokeImage from './pokeImage.js';\n\n\n//pokemon app component\nclass PokemonApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayPokemon: false\n    };\n  }\n\n  displayImage = () => {\n    this.setState({\n      displayPokemon: !this.state.displayPokemon\n    });\n  }\n\n\n  render() {\n    if (this.state.displayPokemon) {\n      return <PokeImage />\n    }\n    return(\n      <div className=\"start-game\">\n        <img className=\"poke-logo\" src=\"http://pngimg.com/uploads/pokemon_logo/pokemon_logo_PNG3.png\" width=\"442\" height=\"162\"/>\n        <h1 className=\"titulo\">Guess the Pokémon</h1>\n        <button className=\"btn\" onClick={this.displayImage}>Start Game</button>\n      </div>\n    );\n  }//render\n\n}//pokemonapp component\n\nexport default PokemonApp;\n","/Users/catavictoria/Documents/GitHub/pokemon-app/src/reportWebVitals.js",[],"/Users/catavictoria/Documents/GitHub/pokemon-app/src/pokeImage.js",["24","25"],"import './pokeImage.css';\nimport React from 'react';\nimport Timer from \"react-compound-timer\";\nimport PokemonApp from './App.js'\n\nconst imagePath = \"https://pokeres.bastionbot.org/images/pokemon/\";\nconst pokePath = \"https://pokeapi.co/api/v2/pokemon/\";\n\n//this function returns a random number within a range\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\n//pokemon image and buttons  component\nclass PokeImage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pokeId: \"\",\n      pokeId2: \"\",\n      correctPokeId: \"\",\n      correctPokeName: \"\",\n      pokeImageId: \"\",\n      pokeName1: \"\",\n      pokeName2: \"\",\n      correctAnswer: false,\n      message: false,\n      correctCounter: 0,\n      incorrectCounter: 0,\n      buttonState: false,\n      newGame: false\n    }\n  }//constructor\n\n  //this hook loads the function when the pokeImage component is first mounted\n  componentDidMount() {\n    this.getPokemonNames();\n  }//componentDidMount\n\n  //function for getting random ids and making request to api\n  getPokemonNames() {\n    //enable the buttons again\n    this.setState({\n      buttonState: false,\n      newGame: false\n    });\n\n    //variables\n    let correctName;\n    let correctId;\n    let name1;\n    let name2;\n    let nonImagePokemones = [413, 641, 585, 849, 877, 745];\n    // generate two random ids\n    let p1 = getRandomInt(1, 887);\n    let p2 = getRandomInt(1, 887);\n    //while loop for getting a new id that's not the same as the one we already have\n    while (p1 === p2 && (nonImagePokemones.includes(p1) || nonImagePokemones.includes(p2))) {\n      p2 = getRandomInt(1, 887);\n    }\n    //setting correct pokemon id\n    if (getRandomInt(1, 2) === 1) {\n      correctId = p1;\n    }\n    else {\n      correctId = p2;\n    }\n\n    console.log(\"p1 = \" + p1);\n    console.log(\"p2 = \" + p2);\n    console.log(\"correctId = \" + correctId);\n    //changing the state of the component\n    this.setState({\n      pokeId: p1,\n      pokeId2: p2,\n      correctPokeId: correctId\n    });\n\n    //making request for first pokemon name\n    console.log(\"sending request to the pokeapi\");\n    fetch(`${pokePath}${p1}`)\n    .then((response) => {\n      if(response.status !== 200) {\n        console.log(\"*** Request not ok: \" + response.statusText);\n        throw response.statusText;\n      }\n      else {\n        return response.json();\n      }\n    })\n    .then((data) => {\n      //variable that stores the name of the pokemon\n      name1 = data.name;\n      // console.log(name1);\n      //making request for second pokemon name\n      fetch(`${pokePath}${p2}`)\n      .then((response) => {\n        if(response.status !== 200) {\n          console.log(\"*** Request not ok: \" + response.statusText);\n          throw response.statusText;\n        }\n        else {\n          return response.json();\n        }\n      })\n      .then((data) => {\n        //variable that stores the name of the pokemon\n        name2 = data.name;\n        // console.log(name2);\n        //if statement for setting state of correct pokemon name\n        if (p1 === correctId) {\n          correctName = name1;\n        }\n        else {\n          correctName = name2;\n        }\n        //checking everything\n        // console.log(\"correct id: \" + correctId);\n        // console.log(p1);\n        // console.log(p2);\n        console.log(\"name1 = \" + name1);\n        console.log(\"name2 = \" + name2);\n        console.log(\"correctName = \" + correctName);\n\n        //setting the state of the Component\n        this.setState({\n          pokeName1: name1,\n          pokeName2: name2,\n          correctPokeName: correctName\n        });\n      })\n    })//end request to api\n  }//getPokemonNames\n\n  //function for handling buttons\n  handleClick(aName) {\n    //checking if the user clicked the button with correct answer\n    let nombreCorrecto = this.state.correctPokeName;\n    if (aName === nombreCorrecto) {\n      this.setState((prevState) => ({\n        message: <p className=\"answer\">Yay! You got it!</p>,\n        correctCounter: prevState.correctCounter + 1\n      }));\n    }\n    else {\n      this.setState((prevState) => ({\n        message: <p className=\"answer\">Noup :( It's {this.state.correctPokeName}</p>,\n        incorrectCounter: prevState.incorrectCounter + 1\n      }));\n    }\n    //disabled the buttons\n    this.setState({\n      buttonState: true\n    });\n    //set timeout for re-rendering and getting a new Pokemon\n    setTimeout(() => {\n      //set message to be empty again\n      this.setState({\n        message: <p className=\"answer\"></p>\n      })\n      //re-render\n      this.getPokemonNames();\n    }, 2000);\n  }//handleClick\n\n  //finishing the game\n  handleFinishGame() {\n    //show an alert with number of pokémon correctly guessed\n    alert(`Good game! You guessed ${this.state.correctCounter} Pokémon correctly!`);\n    //set state for new game\n    this.setState({\n      newGame: true\n    });\n  }\n\n  render() {\n    if (this.state.newGame) {\n      return <PokemonApp />\n    }\n\n    return(\n      <div className=\"poke-image\">\n        <div className=\"title\">\n          <div className=\"timer\">\n            <Timer className=\"the-timer\">\n                <Timer.Hours /> hours<br/>\n                <Timer.Minutes /> minutes<br/>\n                <Timer.Seconds /> seconds\n            </Timer>\n          </div>\n          <img clasName=\"pokeball\" src=\"https://images-wixmp-ed30a86b8c4ca887773594c2.wixmp.com/f/029b8bd9-cb5a-41e4-9c7e-ee516face9bb/dayo3ow-7ac86c31-8b2b-4810-89f2-e6134caf1f2d.gif?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1cm46YXBwOiIsImlzcyI6InVybjphcHA6Iiwib2JqIjpbW3sicGF0aCI6IlwvZlwvMDI5YjhiZDktY2I1YS00MWU0LTljN2UtZWU1MTZmYWNlOWJiXC9kYXlvM293LTdhYzg2YzMxLThiMmItNDgxMC04OWYyLWU2MTM0Y2FmMWYyZC5naWYifV1dLCJhdWQiOlsidXJuOnNlcnZpY2U6ZmlsZS5kb3dubG9hZCJdfQ.LJBxDkRocQStjZpmj9Injfv73mG2SQZ8X6HNdlP5WHw\"\n          width=\"100\" height=\"100\" />\n          <h1 className=\"titulo\">Guess The Pokemon</h1>\n          <img clasName=\"pokeball\" src=\"https://images-wixmp-ed30a86b8c4ca887773594c2.wixmp.com/f/029b8bd9-cb5a-41e4-9c7e-ee516face9bb/dayo3ow-7ac86c31-8b2b-4810-89f2-e6134caf1f2d.gif?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1cm46YXBwOiIsImlzcyI6InVybjphcHA6Iiwib2JqIjpbW3sicGF0aCI6IlwvZlwvMDI5YjhiZDktY2I1YS00MWU0LTljN2UtZWU1MTZmYWNlOWJiXC9kYXlvM293LTdhYzg2YzMxLThiMmItNDgxMC04OWYyLWU2MTM0Y2FmMWYyZC5naWYifV1dLCJhdWQiOlsidXJuOnNlcnZpY2U6ZmlsZS5kb3dubG9hZCJdfQ.LJBxDkRocQStjZpmj9Injfv73mG2SQZ8X6HNdlP5WHw\"\n          width=\"100\" height=\"100\" />\n          <div className=\"counters\">\n            <p className=\"correct\">Correct: {this.state.correctCounter}</p>\n            <p className=\"incorrect\">Incorrect: {this.state.incorrectCounter}</p>\n          </div>\n        </div>\n        <div className=\"image\">\n          <img className=\"the-image\" src={`${imagePath}${this.state.correctPokeId}.png`} alt=\"pokemon\" width=\"350\" height=\"350\" />\n        </div>\n        <div className=\"poke-botones\">\n          <button\n          className=\"button1\"\n          disabled={this.state.buttonState}\n          value={this.state.pokeName1}\n          onClick={() => this.handleClick(this.state.pokeName1)}>{this.state.pokeName1}</button>\n          <button\n          className=\"button2\"\n          disabled={this.state.buttonState}\n          value={this.state.pokeName2}\n          onClick={() => this.handleClick(this.state.pokeName2)}>{this.state.pokeName2}</button>\n        </div>\n        <div className=\"right-or-wrong\">\n          {this.state.message}\n        </div>\n        <div className=\"finish-game\">\n          <button className=\"finish\" disabled={this.state.buttonState} onClick={() => this.handleFinishGame()}>Finish game</button>\n        </div>\n      </div>\n    );\n  }\n\n}//pokeImage component\n\nexport default PokeImage;\n",{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","severity":1,"message":"31","line":28,"column":9,"nodeType":"32","endLine":28,"endColumn":129},{"ruleId":"30","severity":1,"message":"31","line":193,"column":11,"nodeType":"32","endLine":194,"endColumn":38},{"ruleId":"30","severity":1,"message":"31","line":196,"column":11,"nodeType":"32","endLine":197,"endColumn":38},"no-native-reassign",["33"],"no-negated-in-lhs",["34"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]
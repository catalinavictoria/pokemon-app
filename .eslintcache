[{"/Users/catavictoria/Documents/GitHub/pokemon-app/src/index.js":"1","/Users/catavictoria/Documents/GitHub/pokemon-app/src/App.js":"2","/Users/catavictoria/Documents/GitHub/pokemon-app/src/reportWebVitals.js":"3","/Users/catavictoria/Documents/GitHub/pokemon-app/src/pokeImage.js":"4"},{"size":514,"mtime":1607072012686,"results":"5","hashOfConfig":"6"},{"size":1124,"mtime":1607412853236,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1607066295565,"results":"8","hashOfConfig":"6"},{"size":1431,"mtime":1607418591459,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"d27scp",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"/Users/catavictoria/Documents/GitHub/pokemon-app/src/index.js",[],["20","21"],"/Users/catavictoria/Documents/GitHub/pokemon-app/src/App.js",[],"/Users/catavictoria/Documents/GitHub/pokemon-app/src/reportWebVitals.js",[],"/Users/catavictoria/Documents/GitHub/pokemon-app/src/pokeImage.js",["22","23","24","25"],"import React from 'react';\n\nconst imagePath = \"https://pokeres.bastionbot.org/images/pokemon/\";\nconst pokePath = \"https://pokeapi.co/api/v2/pokemon/\";\n\n//this function returns a random number within a range\nfunction getRandomPokemonId(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\n//getting an id to start with\nconst startPokemon = getRandomPokemonId(1, 887);\n\n//function for calling the API\nfunction getPokemonName() {\n  console.log(\"sending request to the pokeapi\");\n  fetch(`${pokePath}${startPokemon}`)\n  .then((response) => {\n    if(response.status != 200) {\n      throw response.statusText;\n      console.log(\"*** Request not ok: \" + response.statusText);\n    }\n    else {\n      response.json();\n    }\n  })\n  .then((data) => {\n    console.log(data);\n    //create a variable that stores the name of the pokemon\n    let name = data.name;\n    console.log(name);\n  })\n}\n\n//pokemon image and buttons  component\nclass PokeImage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pokeId: startPokemon,\n      pokeImage: startPokemon,\n      pokeName: \"\",\n    }\n  }//constructor\n\n  render() {\n    return(\n      <div className=\"Image\">\n        <img src={`${imagePath}${this.state.pokeId}.png`} alt=\"pokemon-image\" width=\"400\" height=\"400\" />\n      </div>\n    );\n  }\n\n}//pokeImage component\n\nexport default PokeImage;\n",{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","severity":1,"message":"31","line":17,"column":10,"nodeType":"32","messageId":"33","endLine":17,"endColumn":24},{"ruleId":"34","severity":1,"message":"35","line":21,"column":24,"nodeType":"36","messageId":"37","endLine":21,"endColumn":26},{"ruleId":"38","severity":1,"message":"39","line":23,"column":7,"nodeType":"40","messageId":"41","endLine":23,"endColumn":65},{"ruleId":"42","severity":1,"message":"43","line":51,"column":9,"nodeType":"44","endLine":51,"endColumn":106},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"no-unused-vars","'getPokemonName' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]